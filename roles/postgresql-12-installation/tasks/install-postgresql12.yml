---
- name: Install PostgreSQL 12 from local rpm
  hosts: localhost
  tasks:
    
     - name: Copy rpm file to tmp folder
       copy: 
         src: postgresql12-12.4-1PGDG.rhel7.x86_64.rpm
         dest: /tmp/postgresql12-12.4-1PGDG.rhel7.x86_64.rpm
    
     - name: Install package
       yum:
         name: /tmp/postgresql12-12.4-1PGDG.rhel7.x86_64.rpm
         state: present
       become: yes

     - name: Set PosgreSQL enviroment variables
       template: 
         src: postrgres.sh.j2
         dest: /etc/profile.d/postgres.sh
         mode: 0644
       notify: restart postgresql
  
     - name: Check if PostgreSQL database is initialized
       stat:
         path: "{{ postgresql_data_dir }}/PG_VERSION"
       register: pgdata_dir_version
 
     - name: Ensure PostgreSQL db is initialized
       command: "{{ postgresql_bin_path }}/initdb -D {{ postgresql_data_dir }}"
       when: pgdata_dir_version is not exists
       become: true
       become_user: "{{ postgresql_user }}"

     - name: Launch db server
       command: "pg_ctl start -D {{ postgres_data_dir }} -l logfile"

     - name: Create root superuser
       postgresql_user:
         name: root
         password: "{{ root_pass }}"
         role_attr_flags: SUPERUSER

     - name: Configure global settings for custom dirs for databases
       lineinfile:
         dest: "{{ postgresql_config_path }}/postgresql.conf"
         regexp: "^#/{{ item.option }}.+$"
         line: "{{ itme.option }} = '{{ item.value }}'"
         state: present
         mode: 0644
       with_items: "{{ postgresql_global_config_options }}"
       notify: restart postgresql

     - name: Create test db
       postgresql_db:
         name: test_db
         lc_collate: en_US.UTF-8
         lc_ctype: en_US.UTF-8
         encoding: UTF-8
         login_host: localhost
         login_password: "{{ root_pass }}"
         login_user: root
         owner: root
         state: present
       become: true
       become_user: "{{ postgresql_user }}"

     - name: Configure host based authentication
       template:
         src: pg_hba.conf.j2
         dest: "{{ postgres_config_path }}/pg_hba.conf"
       notify: restart postgresql
  
     - name: Restart PostgreSQl service after setup
       service:
         name: postgre
         state: restarted

     - name: Ensure PostgreSQL is started 
       service:
         name: postgresql
         state: started

     
